{"version":3,"sources":["DataTable.js","ImpactTable.js","estimator.js","DataForm.js","App.js","serviceWorker.js","index.js"],"names":["DataTable","props","state","className","this","severeData","currentlyInfected","infectionsByRequestedTime","severeCasesByRequestedTime","hospitalBedsByRequestedTime","casesForICUByRequestedTime","casesForVentilatorsByRequestedTime","dollarsInFlight","Component","ImpactTable","impactData","normalizeDays","types","days","estimateInfected","infection","pTypes","period","estimatedInfection","day","Math","trunc","estimateAvailableBeds","totalHospBeds","severeCasesReqByTime","hospBedsByReqTime","estimateLossToEconomy","infectedByReqTime","data","region","income","avgDailyIncomeInUSD","avgPopulation","avgDailyIncomePopulation","periodType","time","timeToElapse","covid19ImpactEstimator","input","impact","severeImpact","reportedCases","totalHospitalBeds","toast","configure","DataForm","handlePopulationChange","evt","setState","population","target","value","handleTimeToElapseChange","handleReportedCasesChange","handlePeriodTypeChange","handleTotalHospitalBedsChange","toastNotice","success","position","POSITION","TOP_CENTER","autoClose","style","color","handleSubmit","results","name","avgAge","showEstimate","preventDefault","onSubmit","Provider","size","type","data-population","onChange","data-time-to-elapse","data-reported-cases","data-total-hospital-beds","data-period-type","data-go-estimate","showTable","App","cName","src","alt","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.2a1146e6.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\n\r\nexport default class DataTable extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n  \r\n    this.state = {\r\n       \r\n    }\r\n  }\r\n  \r\n  render() {\r\n    return (\r\n      <div>\r\n        <table className=\"table table-striped table-bordered table-danger\">\r\n          <caption>SEVERE IMPACT</caption>\r\n          <thead>\r\n            <tr>\r\n              <th>Description</th>\r\n              <th>Result</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <td>Currently Infected</td>\r\n              <td>{this.props.severeData.currentlyInfected}</td>\r\n            </tr>\r\n            <tr>\r\n              <td>infectedByRequestedTime</td>\r\n              <td>{this.props.severeData.infectionsByRequestedTime}</td>\r\n            </tr>\r\n            <tr>\r\n              <td>severeCases</td>\r\n              <td>{this.props.severeData.severeCasesByRequestedTime}</td>\r\n            </tr>\r\n            <tr>\r\n              <td>hospitalBeds</td>\r\n              <td>{this.props.severeData.hospitalBedsByRequestedTime}</td>\r\n            </tr>\r\n            <tr>\r\n              <td>casesForICU</td>\r\n              <td>{this.props.severeData.casesForICUByRequestedTime}</td>\r\n            </tr>\r\n            <tr>\r\n              <td>casesForVentilators</td>\r\n              <td>{this.props.severeData.casesForVentilatorsByRequestedTime}</td>\r\n            </tr>\r\n            <tr>\r\n              <td>Dollar InFlight</td>\r\n              <td>{this.props.severeData.dollarsInFlight}</td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport default class ImpactTable extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n  \r\n    this.state = {\r\n       \r\n    }\r\n  }\r\n  \r\n  render() {\r\n    return (\r\n      <div>\r\n        <table className=\"table table-striped table-bordered table-warning\">\r\n          <caption>IMPACT</caption>\r\n          <thead>\r\n            <tr>\r\n              <th>Description</th>\r\n              <th>Result</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <td>Currently Infected</td>\r\n              <td>{this.props.impactData.currentlyInfected}</td>\r\n            </tr>\r\n            <tr>\r\n              <td>infectedByRequestedTime</td>\r\n              <td>{this.props.impactData.infectionsByRequestedTime}</td>\r\n            </tr>\r\n            <tr>\r\n              <td>severeCases</td>\r\n              <td>{this.props.impactData.severeCasesByRequestedTime}</td>\r\n            </tr>\r\n            <tr>\r\n              <td>hospitalBeds</td>\r\n              <td>{this.props.impactData.hospitalBedsByRequestedTime}</td>\r\n            </tr>\r\n            <tr>\r\n              <td>casesForICU</td>\r\n              <td>{this.props.impactData.casesForICUByRequestedTime}</td>\r\n            </tr>\r\n            <tr>\r\n              <td>casesForVentilators</td>\r\n              <td>{this.props.impactData.casesForVentilatorsByRequestedTime}</td>\r\n            </tr>\r\n            <tr>\r\n              <td>Dollar InFlight</td>\r\n              <td>{this.props.impactData.dollarsInFlight}</td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n        \r\n      </div>\r\n    )\r\n  }\r\n}\r\n","// Function to normalize months, weeks into days\r\nconst normalizeDays = (types) => {\r\n  let days;\r\n  switch (types) {\r\n    case 'months':\r\n      days = 30;\r\n      break;\r\n    case 'weeks':\r\n      days = 7;\r\n      break;\r\n    default:\r\n      days = 1;\r\n      break;\r\n  }\r\n  return days;\r\n};\r\n\r\n// Infection estimator\r\nconst estimateInfected = (infection, pTypes, period) => {\r\n  let estimatedInfection;\r\n  let factor;\r\n  let day = period;\r\n  if (day === 1 || day === 2) {\r\n    if (pTypes === 'months' || pTypes === 'weeks') {\r\n      day *= normalizeDays(pTypes);\r\n      // console.log(day);\r\n      factor = 2 ** Math.trunc(day / 3);\r\n      estimatedInfection = infection * factor;\r\n    } else {\r\n      estimatedInfection = infection * day;\r\n    }\r\n  } else {\r\n    day *= normalizeDays(pTypes);\r\n    factor = 2 ** Math.trunc(day / 3);\r\n    estimatedInfection = infection * factor;\r\n  }\r\n  return estimatedInfection;\r\n};\r\n\r\n// Challenge 2: total number of available bed spaces\r\nconst estimateAvailableBeds = (totalHospBeds, severeCasesReqByTime) => {\r\n  const bedAvailable = 0.35 * totalHospBeds;\r\n  const hospBedsByReqTime = bedAvailable - severeCasesReqByTime;\r\n  return Math.trunc(hospBedsByReqTime);\r\n};\r\n\r\n//  challenge 3: Loss to economy\r\nconst estimateLossToEconomy = (infectedByReqTime, data) => {\r\n  const {\r\n    region: { avgDailyIncomeInUSD: income, avgDailyIncomePopulation: avgPopulation },\r\n    periodType,\r\n    timeToElapse: time\r\n  } = data;\r\n  const period = normalizeDays(periodType) * time;\r\n  const dollarsInFlight = Math.trunc((infectedByReqTime * income * avgPopulation) / period);\r\n  return dollarsInFlight;\r\n};\r\n\r\n\r\nconst covid19ImpactEstimator = (data) => {\r\n  const input = data;\r\n  const impact = {};\r\n  const severeImpact = {};\r\n  impact.currentlyInfected = input.reportedCases * 10;\r\n  severeImpact.currentlyInfected = input.reportedCases * 50;\r\n\r\n  impact.infectionsByRequestedTime = estimateInfected(impact.currentlyInfected,\r\n    input.periodType, input.timeToElapse);\r\n  severeImpact.infectionsByRequestedTime = estimateInfected(severeImpact.currentlyInfected,\r\n    input.periodType, input.timeToElapse);\r\n  // challenge 2\r\n  impact.severeCasesByRequestedTime = 0.15 * impact.infectionsByRequestedTime;\r\n  severeImpact.severeCasesByRequestedTime = 0.15 * severeImpact.infectionsByRequestedTime;\r\n  // estimate Beds space available\r\n  impact.hospitalBedsByRequestedTime = estimateAvailableBeds(\r\n    input.totalHospitalBeds, impact.severeCasesByRequestedTime\r\n  );\r\n  severeImpact.hospitalBedsByRequestedTime = estimateAvailableBeds(\r\n    input.totalHospitalBeds, severeImpact.severeCasesByRequestedTime\r\n  );\r\n\r\n  // challenge 3\r\n  // ICU\r\n  impact.casesForICUByRequestedTime = Math.trunc(\r\n    0.05 * impact.infectionsByRequestedTime\r\n  );\r\n  severeImpact.casesForICUByRequestedTime = Math.trunc(\r\n    0.05 * severeImpact.infectionsByRequestedTime\r\n  );\r\n\r\n  // Ventilator\r\n  impact.casesForVentilatorsByRequestedTime = Math.trunc(\r\n    0.02 * impact.infectionsByRequestedTime\r\n  );\r\n  severeImpact.casesForVentilatorsByRequestedTime = Math.trunc(\r\n    0.02 * severeImpact.infectionsByRequestedTime\r\n  );\r\n\r\n  // Lose to economy\r\n  impact.dollarsInFlight = estimateLossToEconomy(\r\n    impact.infectionsByRequestedTime, input\r\n  );\r\n  severeImpact.dollarsInFlight = estimateLossToEconomy(\r\n    severeImpact.infectionsByRequestedTime, input\r\n  );\r\n\r\n  return {\r\n    input,\r\n    impact,\r\n    severeImpact\r\n  };\r\n};\r\n\r\nexport default covid19ImpactEstimator;\r\n","import React, { Component } from 'react';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport DataTable from './DataTable';\r\nimport ImpactTable from './ImpactTable'\r\nimport covid19ImpactEstimator from './estimator';\r\nimport { IconContext } from 'react-icons'\r\nimport {FaBed, FaCalendarAlt, FaUsers, FaFileAlt, FaClock, FaArrowCircleRight } from 'react-icons/fa';\r\n\r\ntoast.configure()\r\n\r\nexport default class DataForm extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n  \r\n    this.state = {\r\n      population: '',\r\n      timeToElapse: '',\r\n      reportedCases: '',\r\n      totalHospitalBeds: '',\r\n      periodType: 'days',\r\n      impact: {\r\n        currentlyInfected: '',\r\n        infectionsByRequestedTime:'',\r\n        severeCasesByRequestedTime:'',\r\n        hospitalBedsByRequestedTime: '',\r\n        casesForICUByRequestedTime: '',\r\n        casesForVentilatorsByRequestedTime: '',\r\n        dollarsInFlight: ''\r\n      },\r\n      severeImpact: {\r\n        currentlyInfected: '',\r\n        infectionsByRequestedTime:'',\r\n        severeCasesByRequestedTime:'',\r\n        hospitalBedsByRequestedTime: '',\r\n        casesForICUByRequestedTime: '',\r\n        casesForVentilatorsByRequestedTime: '',\r\n        dollarsInFlight: ''\r\n      },\r\n      showEstimate: false\r\n    }\r\n  }\r\n\r\n  handlePopulationChange = (evt) => {\r\n    this.setState({\r\n      population: evt.target.value\r\n    });\r\n  }\r\n\r\n  handleTimeToElapseChange = (evt) => {\r\n    this.setState({\r\n      timeToElapse: evt.target.value\r\n    });\r\n  }\r\n\r\n  handleReportedCasesChange = (evt) => {\r\n    this.setState({\r\n      reportedCases: evt.target.value\r\n    });\r\n  }\r\n\r\n  handlePeriodTypeChange = (evt) => {\r\n    this.setState({\r\n      periodType: evt.target.value\r\n    });\r\n  }\r\n\r\n  handleTotalHospitalBedsChange = (evt) => {\r\n    this.setState({\r\n      totalHospitalBeds: evt.target.value\r\n    });\r\n  }\r\n\r\n  toastNotice = () => {\r\n   \r\n      toast.success('Success.., Check Table for details', \r\n        {position: toast.POSITION.TOP_CENTER,\r\n        autoClose: 12000,\r\n        style: {color: 'lime'}\r\n    }); \r\n    // } else {\r\n    //     toast.error('Fail.., Try again!!!', \r\n    //     {position: toast.POSITION.TOP_CENTER,\r\n    //     autoClose: 5000\r\n    //   });\r\n    // }\r\n    \r\n  }\r\n\r\n  handleSubmit = (evt) => {\r\n    const { population, timeToElapse, reportedCases, totalHospitalBeds, periodType } = this.state;\r\n    const data = { \r\n      region: { \r\n          name: \"Africa\", \r\n          avgAge: 19.7, \r\n          avgDailyIncomeInUSD: 5, \r\n          avgDailyIncomePopulation: 0.71 \r\n        }, \r\n      periodType: periodType, \r\n      timeToElapse: timeToElapse, \r\n      reportedCases: reportedCases, \r\n      population: population, \r\n      totalHospitalBeds: totalHospitalBeds \r\n    };\r\n    if (!periodType ||\r\n        !timeToElapse ||\r\n        !reportedCases ||\r\n        !population ||\r\n        !totalHospitalBeds) {\r\n  \r\n        return false;\r\n    }\r\n    const results = covid19ImpactEstimator(data);\r\n    // console.log(results);\r\n    this.setState({ showEstimate: true, ...results});\r\n    this.toastNotice();\r\n    evt.preventDefault();\r\n  }\r\n\r\n  \r\n  render() {\r\n    const { population, timeToElapse, reportedCases, totalHospitalBeds, periodType } = this.state;\r\n    const showTable = () => {\r\n      if (this.state.showEstimate) {\r\n        //this.toastNotice();\r\n        return (\r\n          <div>\r\n            {/* <div className=\"alert alert-success alert-dismissible fade show\">\r\n              <button type=\"button\" className=\"close\" data-dismiss=\"alert\">&times;</button>\r\n              <strong>Success!</strong> your estimate is below\r\n            </div> */}\r\n            <div className=\"row\">\r\n              <ImpactTable impactData={this.state.impact} className=\"col-6 p-4\" />\r\n              <DataTable severeData={this.state.severeImpact} className=\"col-6 p-4\"/>\r\n            </div>\r\n          </div>\r\n        );\r\n      // } else {\r\n      //   return (\r\n      //     <div>\r\n      //       <div className=\"alert alert-warning\">\r\n      //         <strong>Failed!</strong>Please try again\r\n      //       </div>\r\n      //     </div>\r\n      //   )\r\n      }\r\n    };\r\n    return (\r\n      <div>\r\n        <form onSubmit={ this.handleSubmit } >\r\n          <IconContext.Provider value={{ color:\"grey\", size:\"1.5em\" }}>\r\n\r\n            <div className=\"row\">\r\n              <div className=\"my-1 col-sm-4\">\r\n                <label className=\"p-2\">Population <FaUsers /></label>\r\n                <input className=\"form-control\"\r\n                  type=\"number\"\r\n                  value={population}\r\n                  data-population\r\n                  onChange={this.handlePopulationChange}\r\n                />\r\n              </div>\r\n              <div className=\"my-1 col-sm-4\">\r\n                <label className=\"p-2\">Time To Elapse <FaClock /></label>\r\n                <input className=\"form-control\"\r\n                  type=\"number\"\r\n                  value={timeToElapse}\r\n                  data-time-to-elapse\r\n                  onChange={this.handleTimeToElapseChange}\r\n                />\r\n              </div>\r\n              <div className=\"my-1 col-sm-4\">\r\n                <label className=\"p-2\">Reported Cases <FaFileAlt /></label>\r\n                <input className=\"form-control\"\r\n                  type=\"number\"\r\n                  value={reportedCases}\r\n                  data-reported-cases\r\n                  onChange={this.handleReportedCasesChange}\r\n                />\r\n              </div>\r\n            </div>\r\n            \r\n            <div className=\"row\">\r\n              <div className=\"my-1 col-sm-6\">\r\n                <label className=\"p-2\">Total Hospital Beds <FaBed /></label>\r\n                <input className=\"form-control\"\r\n                  type=\"number\"\r\n                  value={totalHospitalBeds}\r\n                  data-total-hospital-beds\r\n                  onChange={this.handleTotalHospitalBedsChange}\r\n                />\r\n              </div>\r\n              <div className=\"my-1 col-sm-6\">\r\n              <label className=\"p-2\">Period Type <FaCalendarAlt /></label>\r\n                <select className=\"form-control\"\r\n                  value={periodType}\r\n                  data-period-type\r\n                  onChange={this.handlePeriodTypeChange}\r\n                >\r\n                  <option value=\"days\">Days</option>\r\n                  <option value=\"weeks\">Weeks</option>\r\n                  <option value=\"months\">Months</option>\r\n                </select>\r\n              </div>\r\n            </div>\r\n              <button className=\"btn btn-primary mt-1 mb-2\"\r\n                type=\"submit\" data-go-estimate >Estimate <FaArrowCircleRight/></button>\r\n            {/* onClick={this.toastNotice} */}\r\n\r\n          </IconContext.Provider>\r\n        </form>\r\n        {showTable()}\r\n        {/* <ImpactTable impactData={this.state.impact} />\r\n        <DataTable severeData={this.state.severeImpact} /> */}\r\n      </div>\r\n      \r\n    )\r\n  }\r\n}\r\n\r\n","import React, { Component } from 'react';\n// import logo from './logo.svg';\n// import './App.css';\nimport DataForm from './DataForm';\n\n\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: {\n        region: { \n          cName: \"\", \n          avgAge: null, \n          avgDailyIncomeInUSD: null, \n          avgDailyIncomePopulation: null \n        }, \n      periodType: \"days\", \n      timeToElapse: 58, \n      reportedCases: 674, \n      population: 66622705, \n      totalHospitalBeds: 1380614 \n      },\n      impact: {},\n      severeImpact: {},\n    };\n  }\n\n\n  render() {\n    return (\n      <div>\n        <h3 className=\"bg-primary text-white text-center p-2\">\n        <img src=\"./images/covid.jpg\" className=\"img-fluid float-left\" alt=\"covid-19\" />\n          Covid-19 Estimator App\n        </h3>\n        <div className=\"container-fluid\">\n          <DataForm />\n        </div>\n      </div>\n    );\n  }\n  \n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}